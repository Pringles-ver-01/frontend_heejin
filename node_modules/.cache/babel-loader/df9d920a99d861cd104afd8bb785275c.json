{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KimHeejin\\\\WebstormProjects\\\\frontend-pri-b\\\\src\\\\pages\\\\star-ratings.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Star from './star';\n\nclass StarRatings extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      highestStarHovered: -Infinity\n    };\n    this.fillId = `starGrad${Math.random().toFixed(15).slice(2)}`;\n\n    this.hoverOverStar = starRating => {\n      return () => {\n        this.setState({\n          highestStarHovered: starRating\n        });\n      };\n    };\n\n    this.unHoverOverStar = () => {\n      this.setState({\n        highestStarHovered: -Infinity\n      });\n    };\n  }\n\n  get starRatingsStyle() {\n    const starRatingsStyle = {\n      position: 'relative',\n      boxSizing: 'border-box',\n      display: 'inline-block'\n    };\n    return this.props.ignoreInlineStyles ? {} : starRatingsStyle;\n  }\n\n  get starGradientStyle() {\n    const starGradientStyle = {\n      position: 'absolute',\n      zIndex: '0',\n      width: '0',\n      height: '0',\n      visibility: 'hidden'\n    };\n    return this.props.ignoreInlineStyles ? {} : starGradientStyle;\n  }\n\n  stopColorStyle(color) {\n    const stopColorStyle = {\n      stopColor: color,\n      stopOpacity: '1'\n    };\n    return this.props.ignoreInlineStyles ? {} : stopColorStyle;\n  }\n\n  get titleText() {\n    const {\n      typeOfWidget,\n      rating: selectedRating\n    } = this.props;\n    const hoveredRating = this.state.highestStarHovered;\n    const currentRating = hoveredRating > 0 ? hoveredRating : selectedRating; // fix it at 2 decimal places and remove trailing 0s\n\n    let formattedRating = parseFloat(currentRating.toFixed(2)).toString();\n\n    if (Number.isInteger(currentRating)) {\n      formattedRating = String(currentRating);\n    }\n\n    let starText = `${typeOfWidget}s`;\n\n    if (formattedRating === '1') {\n      starText = typeOfWidget;\n    }\n\n    return `${formattedRating} ${starText}`;\n  }\n\n  get offsetValue() {\n    const rating = this.props.rating;\n    const ratingIsInteger = Number.isInteger(rating);\n    let offsetValue = '0%';\n\n    if (!ratingIsInteger) {\n      const firstTwoDecimals = rating.toFixed(2).split('.')[1].slice(0, 2);\n      offsetValue = `${firstTwoDecimals}%`;\n    }\n\n    return offsetValue;\n  }\n\n  get renderStars() {\n    const {\n      changeRating,\n      rating: selectedRating,\n      numberOfStars,\n      starDimension,\n      starSpacing,\n      starRatedColor,\n      starEmptyColor,\n      starHoverColor,\n      gradientPathName,\n      ignoreInlineStyles,\n      svgIconPath,\n      svgIconViewBox,\n      name\n    } = this.props;\n    const {\n      highestStarHovered\n    } = this.state;\n    const numberOfStarsArray = Array.apply(null, Array(numberOfStars));\n    return numberOfStarsArray.map((_, index) => {\n      const starRating = index + 1;\n      const isStarred = starRating <= selectedRating; // hovered only matters when changeRating is true\n\n      const hoverMode = highestStarHovered > 0;\n      const isHovered = starRating <= highestStarHovered;\n      const isCurrentHoveredStar = starRating === highestStarHovered; // only matters when changeRating is false\n      // given star 5 and rating 4.2:  5 > 4.2 && 4 < 4.2;\n\n      const isPartiallyFullStar = starRating > selectedRating && starRating - 1 < selectedRating;\n      const isFirstStar = starRating === 1;\n      const isLastStar = starRating === numberOfStars;\n      return /*#__PURE__*/React.createElement(Star, {\n        key: starRating,\n        fillId: this.fillId,\n        changeRating: changeRating ? () => changeRating(starRating, name) : null,\n        hoverOverStar: changeRating ? this.hoverOverStar(starRating) : null,\n        unHoverOverStar: changeRating ? this.unHoverOverStar : null,\n        isStarred: isStarred,\n        isPartiallyFullStar: isPartiallyFullStar,\n        isHovered: isHovered,\n        hoverMode: hoverMode,\n        isCurrentHoveredStar: isCurrentHoveredStar,\n        isFirstStar: isFirstStar,\n        isLastStar: isLastStar,\n        starDimension: starDimension,\n        starSpacing: starSpacing,\n        starHoverColor: starHoverColor,\n        starRatedColor: starRatedColor,\n        starEmptyColor: starEmptyColor,\n        gradientPathName: gradientPathName,\n        ignoreInlineStyles: ignoreInlineStyles,\n        svgIconPath: svgIconPath,\n        svgIconViewBox: svgIconViewBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      starRatedColor,\n      starEmptyColor\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"star-ratings\",\n      title: this.titleText,\n      style: this.starRatingsStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"star-grad\",\n      style: this.starGradientStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"defs\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: this.fillId,\n      x1: \"0%\",\n      y1: \"0%\",\n      x2: \"100%\",\n      y2: \"0%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"0%\",\n      className: \"stop-color-first\",\n      style: this.stopColorStyle(starRatedColor),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: this.offsetValue,\n      className: \"stop-color-first\",\n      style: this.stopColorStyle(starRatedColor),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: this.offsetValue,\n      className: \"stop-color-final\",\n      style: this.stopColorStyle(starEmptyColor),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"100%\",\n      className: \"stop-color-final\",\n      style: this.stopColorStyle(starEmptyColor),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    })))), this.renderStars);\n  }\n\n}\n\nStarRatings.propTypes = {\n  rating: PropTypes.number.isRequired,\n  numberOfStars: PropTypes.number.isRequired,\n  changeRating: PropTypes.func,\n  starHoverColor: PropTypes.string.isRequired,\n  starRatedColor: PropTypes.string.isRequired,\n  starEmptyColor: PropTypes.string.isRequired,\n  starDimension: PropTypes.string.isRequired,\n  starSpacing: PropTypes.string.isRequired,\n  gradientPathName: PropTypes.string.isRequired,\n  ignoreInlineStyles: PropTypes.bool.isRequired,\n  svgIconPath: PropTypes.string.isRequired,\n  svgIconViewBox: PropTypes.string.isRequired,\n  name: PropTypes.string\n};\nStarRatings.defaultProps = {\n  rating: 0,\n  typeOfWidget: 'Star',\n  numberOfStars: 5,\n  changeRating: null,\n  starHoverColor: 'rgb(230, 67, 47)',\n  starRatedColor: 'rgb(109, 122, 130)',\n  starEmptyColor: 'rgb(203, 211, 227)',\n  starDimension: '50px',\n  starSpacing: '7px',\n  gradientPathName: '',\n  ignoreInlineStyles: false,\n  svgIconPath: 'm25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z',\n  svgIconViewBox: '0 0 51 48'\n};\nexport default StarRatings;","map":{"version":3,"sources":["C:/Users/KimHeejin/WebstormProjects/frontend-pri-b/src/pages/star-ratings.js"],"names":["React","PropTypes","Star","StarRatings","Component","state","highestStarHovered","Infinity","fillId","Math","random","toFixed","slice","hoverOverStar","starRating","setState","unHoverOverStar","starRatingsStyle","position","boxSizing","display","props","ignoreInlineStyles","starGradientStyle","zIndex","width","height","visibility","stopColorStyle","color","stopColor","stopOpacity","titleText","typeOfWidget","rating","selectedRating","hoveredRating","currentRating","formattedRating","parseFloat","toString","Number","isInteger","String","starText","offsetValue","ratingIsInteger","firstTwoDecimals","split","renderStars","changeRating","numberOfStars","starDimension","starSpacing","starRatedColor","starEmptyColor","starHoverColor","gradientPathName","svgIconPath","svgIconViewBox","name","numberOfStarsArray","Array","apply","map","_","index","isStarred","hoverMode","isHovered","isCurrentHoveredStar","isPartiallyFullStar","isFirstStar","isLastStar","render","propTypes","number","isRequired","func","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Star from './star';\r\n\r\nclass StarRatings extends React.Component {\r\n    state = {\r\n        highestStarHovered: -Infinity\r\n    }\r\n    fillId = `starGrad${Math.random().toFixed(15).slice(2)}`;\r\n\r\n    get starRatingsStyle() {\r\n        const starRatingsStyle = {\r\n            position: 'relative',\r\n            boxSizing: 'border-box',\r\n            display: 'inline-block'\r\n        };\r\n        return this.props.ignoreInlineStyles ? {} : starRatingsStyle;\r\n    }\r\n\r\n    get starGradientStyle() {\r\n        const starGradientStyle = {\r\n            position: 'absolute',\r\n            zIndex: '0',\r\n            width: '0',\r\n            height: '0',\r\n            visibility: 'hidden'\r\n        };\r\n        return this.props.ignoreInlineStyles ? {} : starGradientStyle;\r\n    }\r\n\r\n    stopColorStyle(color) {\r\n        const stopColorStyle = {\r\n            stopColor: color,\r\n            stopOpacity: '1'\r\n        };\r\n        return this.props.ignoreInlineStyles ? {} : stopColorStyle;\r\n    }\r\n\r\n    get titleText() {\r\n        const {\r\n            typeOfWidget,\r\n            rating: selectedRating\r\n        } = this.props;\r\n        const hoveredRating = this.state.highestStarHovered;\r\n        const currentRating = hoveredRating > 0 ? hoveredRating : selectedRating;\r\n        // fix it at 2 decimal places and remove trailing 0s\r\n        let formattedRating = parseFloat(currentRating.toFixed(2)).toString();\r\n        if (Number.isInteger(currentRating)) {\r\n            formattedRating = String(currentRating);\r\n        }\r\n        let starText = `${typeOfWidget}s`;\r\n        if (formattedRating === '1') {\r\n            starText = typeOfWidget;\r\n        }\r\n        return `${formattedRating} ${starText}`;\r\n    }\r\n\r\n\r\n    get offsetValue() {\r\n        const rating = this.props.rating;\r\n        const ratingIsInteger = Number.isInteger(rating);\r\n        let offsetValue = '0%';\r\n        if (!ratingIsInteger) {\r\n            const firstTwoDecimals = rating.toFixed(2).split('.')[1].slice(0, 2);\r\n            offsetValue = `${firstTwoDecimals}%`;\r\n        }\r\n        return offsetValue;\r\n    }\r\n\r\n    hoverOverStar = (starRating) => {\r\n        return () => {\r\n            this.setState({\r\n                highestStarHovered: starRating,\r\n            });\r\n        }\r\n    }\r\n\r\n    unHoverOverStar = () => {\r\n        this.setState({\r\n            highestStarHovered: -Infinity,\r\n        });\r\n    }\r\n\r\n    get renderStars() {\r\n        const {\r\n            changeRating,\r\n            rating: selectedRating,\r\n            numberOfStars,\r\n            starDimension,\r\n            starSpacing,\r\n            starRatedColor,\r\n            starEmptyColor,\r\n            starHoverColor,\r\n            gradientPathName,\r\n            ignoreInlineStyles,\r\n            svgIconPath,\r\n            svgIconViewBox,\r\n            name\r\n        } = this.props;\r\n        const { highestStarHovered } = this.state;\r\n\r\n        const numberOfStarsArray = Array.apply(null, Array(numberOfStars));\r\n\r\n        return numberOfStarsArray.map((_, index) => {\r\n            const starRating = index + 1;\r\n            const isStarred = starRating <= selectedRating;\r\n\r\n            // hovered only matters when changeRating is true\r\n            const hoverMode = highestStarHovered > 0;\r\n            const isHovered = starRating <= highestStarHovered;\r\n            const isCurrentHoveredStar = starRating === highestStarHovered;\r\n\r\n            // only matters when changeRating is false\r\n            // given star 5 and rating 4.2:  5 > 4.2 && 4 < 4.2;\r\n            const isPartiallyFullStar = starRating > selectedRating && starRating - 1 < selectedRating\r\n\r\n            const isFirstStar = starRating === 1;\r\n            const isLastStar = starRating === numberOfStars;\r\n\r\n            return (\r\n                <Star\r\n                    key={starRating}\r\n                    fillId={this.fillId}\r\n                    changeRating={changeRating ? () => changeRating(starRating, name) : null}\r\n                    hoverOverStar={changeRating ? this.hoverOverStar(starRating) : null}\r\n                    unHoverOverStar={changeRating ? this.unHoverOverStar : null}\r\n                    isStarred={isStarred}\r\n                    isPartiallyFullStar={isPartiallyFullStar}\r\n                    isHovered={isHovered}\r\n                    hoverMode={hoverMode}\r\n                    isCurrentHoveredStar={isCurrentHoveredStar}\r\n                    isFirstStar={isFirstStar}\r\n                    isLastStar={isLastStar}\r\n                    starDimension={starDimension}\r\n                    starSpacing={starSpacing}\r\n                    starHoverColor={starHoverColor}\r\n                    starRatedColor={starRatedColor}\r\n                    starEmptyColor={starEmptyColor}\r\n                    gradientPathName={gradientPathName}\r\n                    ignoreInlineStyles={ignoreInlineStyles}\r\n                    svgIconPath={svgIconPath}\r\n                    svgIconViewBox={svgIconViewBox}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            starRatedColor,\r\n            starEmptyColor\r\n        } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className=\"star-ratings\"\r\n                title={this.titleText}\r\n                style={this.starRatingsStyle}\r\n            >\r\n                <svg\r\n                    className=\"star-grad\"\r\n                    style={this.starGradientStyle}\r\n                >\r\n                    <defs>\r\n                        <linearGradient id={this.fillId} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                            <stop offset=\"0%\" className=\"stop-color-first\" style={this.stopColorStyle(starRatedColor)} />\r\n                            <stop offset={this.offsetValue} className=\"stop-color-first\" style={this.stopColorStyle(starRatedColor)} />\r\n                            <stop offset={this.offsetValue} className=\"stop-color-final\" style={this.stopColorStyle(starEmptyColor)} />\r\n                            <stop offset=\"100%\" className=\"stop-color-final\" style={this.stopColorStyle(starEmptyColor)} />\r\n                        </linearGradient>\r\n                    </defs>\r\n                </svg>\r\n                {this.renderStars}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStarRatings.propTypes = {\r\n    rating: PropTypes.number.isRequired,\r\n    numberOfStars: PropTypes.number.isRequired,\r\n    changeRating: PropTypes.func,\r\n    starHoverColor: PropTypes.string.isRequired,\r\n    starRatedColor: PropTypes.string.isRequired,\r\n    starEmptyColor: PropTypes.string.isRequired,\r\n    starDimension: PropTypes.string.isRequired,\r\n    starSpacing: PropTypes.string.isRequired,\r\n    gradientPathName: PropTypes.string.isRequired,\r\n    ignoreInlineStyles: PropTypes.bool.isRequired,\r\n    svgIconPath: PropTypes.string.isRequired,\r\n    svgIconViewBox: PropTypes.string.isRequired,\r\n    name: PropTypes.string\r\n};\r\n\r\nStarRatings.defaultProps = {\r\n    rating: 0,\r\n    typeOfWidget: 'Star',\r\n    numberOfStars: 5,\r\n    changeRating: null,\r\n    starHoverColor: 'rgb(230, 67, 47)',\r\n    starRatedColor: 'rgb(109, 122, 130)',\r\n    starEmptyColor: 'rgb(203, 211, 227)',\r\n    starDimension: '50px',\r\n    starSpacing: '7px',\r\n    gradientPathName: '',\r\n    ignoreInlineStyles: false,\r\n    svgIconPath: 'm25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z',\r\n    svgIconViewBox: '0 0 51 48'\r\n};\r\n\r\nexport default StarRatings;\r\n"]},"metadata":{},"sourceType":"module"}