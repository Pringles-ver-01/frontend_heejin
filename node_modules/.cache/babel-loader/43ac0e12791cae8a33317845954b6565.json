{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KimHeejin\\\\WebstormProjects\\\\frontend-pri-b\\\\src\\\\component\\\\second_list.js\";\nimport React, { useState, useReducer } from 'react';\nimport faker from 'faker/locale/en_US';\nimport { FiX } from 'react-icons/fi';\nlet n = 0;\n\nconst Todo = () => {\n  const initialState = Array.from(Array(15).keys()).map(i => {\n    faker.locale = 'en_US';\n    return {\n      id: n++,\n      title: faker.lorem.sentence(5),\n      done: false\n    };\n  });\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'active':\n        return state.filter(item => !item.done);\n\n      case 'clear':\n        return [];\n\n      case 'add':\n        return [...state, {\n          title: action.title,\n          done: false,\n          id: n++\n        }];\n\n      case 'remove':\n        return state.filter(item => item.id !== action.id);\n\n      case 'toggle':\n        return state.map(item => {\n          if (item.id === action.id) item['done'] = !action.value;\n          return item;\n        });\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'add',\n      title: value\n    });\n    setValue('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: value,\n    onChange: e => setValue(e.target.value),\n    name: \"todo\",\n    type: \"text\",\n    className: \"form-input\",\n    placeholder: \"Enter something...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(React.Fragment, null, state.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row items-center justify-start\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"flex items-center justify-start space-x-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: i,\n    type: \"checkbox\",\n    checked: item.done,\n    onChange: e => dispatch({\n      type: 'toggle',\n      id: item.id,\n      value: item.done\n    }),\n    className: \"form-checkbox text-blue-500 h-4 w-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: `${item.done ? 'line-through' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, item.title)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-default ml-auto\",\n    onClick: () => dispatch({\n      type: 'remove',\n      id: item.id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FiX, {\n    size: 16,\n    className: \"stroke-current text-grey-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row items-center justify-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-sm font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, state.filter(item => !item.done).length, \" items left\"), state.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row items-center justify-end ml-auto space-x-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, state.filter(item => item.done).length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-default bg-transparent hover:bg-blue-50 text-blue-500 hover:text-blue-600\",\n    onClick: () => dispatch({\n      type: 'active'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Remove completed\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-default bg-transparent hover:bg-blue-50 text-blue-500 hover:text-blue-600\",\n    onClick: () => dispatch({\n      type: 'clear'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Clear\"))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/KimHeejin/WebstormProjects/frontend-pri-b/src/component/second_list.js"],"names":["React","useState","useReducer","faker","FiX","n","Todo","initialState","Array","from","keys","map","i","locale","id","title","lorem","sentence","done","reducer","state","action","type","filter","item","value","Error","dispatch","setValue","handleSubmit","e","preventDefault","target","length"],"mappings":"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","sourcesContent":["import React, {useState, useReducer} from 'react'\r\nimport faker from 'faker/locale/en_US'\r\nimport {FiX} from 'react-icons/fi'\r\n\r\nlet n = 0\r\nconst Todo = () => {\r\n    const initialState = Array.from(Array(15).keys()).map(i => {\r\n        faker.locale = 'en_US'\r\n        return {id: n++, title: faker.lorem.sentence(5), done: false}\r\n    })\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'active':\r\n                return state.filter(item => !item.done)\r\n            case 'clear':\r\n                return []\r\n            case 'add':\r\n                return [...state, {title: action.title, done: false, id: n++}]\r\n            case 'remove':\r\n                return state.filter(item => item.id !== action.id)\r\n            case 'toggle':\r\n                return state.map(item => {\r\n                    if (item.id === action.id) item['done'] = !action.value\r\n                    return item\r\n                })\r\n            default:\r\n                throw new Error()\r\n        }\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        dispatch({type: 'add', title: value})\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col w-full\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-element\">\r\n                    <input\r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        name=\"todo\"\r\n                        type=\"text\"\r\n                        className=\"form-input\"\r\n                        placeholder=\"Enter something...\"\r\n                    />\r\n                </div>\r\n            </form>\r\n            <>\r\n                {state.map((item, i) => (\r\n                    <div className=\"flex flex-row items-center justify-start\" key={i}>\r\n                        <label className=\"flex items-center justify-start space-x-2\">\r\n                            <input\r\n                                name={i}\r\n                                type=\"checkbox\"\r\n                                checked={item.done}\r\n                                onChange={e =>\r\n                                    dispatch({type: 'toggle', id: item.id, value: item.done})\r\n                                }\r\n                                className=\"form-checkbox text-blue-500 h-4 w-4\"\r\n                            />\r\n                            <span className={`${item.done ? 'line-through' : ''}`}>\r\n                {item.title}\r\n              </span>\r\n                        </label>\r\n                        <button\r\n                            className=\"btn btn-default ml-auto\"\r\n                            onClick={() => dispatch({type: 'remove', id: item.id})}>\r\n                            <FiX size={16} className=\"stroke-current text-grey-500\" />\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </>\r\n            <div className=\"flex flex-row items-center justify-start\">\r\n                <div className=\"text-sm font-bold\">\r\n                    {state.filter(item => !item.done).length} items left\r\n                </div>\r\n                {state.length > 0 && (\r\n                    <div className=\"flex flex-row items-center justify-end ml-auto space-x-2\">\r\n                        {state.filter(item => item.done).length > 0 && (\r\n                            <button\r\n                                className=\"btn btn-default bg-transparent hover:bg-blue-50 text-blue-500 hover:text-blue-600\"\r\n                                onClick={() => dispatch({type: 'active'})}>\r\n                                Remove completed\r\n                            </button>\r\n                        )}\r\n                        <button\r\n                            className=\"btn btn-default bg-transparent hover:bg-blue-50 text-blue-500 hover:text-blue-600\"\r\n                            onClick={() => dispatch({type: 'clear'})}>\r\n                            Clear\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}