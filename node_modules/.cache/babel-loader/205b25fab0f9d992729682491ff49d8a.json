{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KimHeejin\\\\WebstormProjects\\\\frontend-pri-b\\\\src\\\\pages\\\\star.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport '../css/components/';\n\nclass Star extends React.Component {\n  get starContainerStyle() {\n    const {\n      changeRating,\n      starSpacing,\n      isFirstStar,\n      isLastStar,\n      ignoreInlineStyles\n    } = this.props;\n    const starContainerStyle = {\n      position: 'relative',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      paddingLeft: isFirstStar ? undefined : starSpacing,\n      paddingRight: isLastStar ? undefined : starSpacing,\n      cursor: changeRating ? 'pointer' : undefined\n    };\n    return ignoreInlineStyles ? {} : starContainerStyle;\n  }\n\n  get starSvgStyle() {\n    const {\n      ignoreInlineStyles,\n      isCurrentHoveredStar,\n      starDimension\n    } = this.props;\n    const starSvgStyle = {\n      width: starDimension,\n      height: starDimension,\n      transition: 'transform .2s ease-in-out',\n      transform: isCurrentHoveredStar ? 'scale(1.1)' : undefined\n    };\n    return ignoreInlineStyles ? {} : starSvgStyle;\n  }\n\n  get pathStyle() {\n    const {\n      isStarred,\n      isPartiallyFullStar,\n      isHovered,\n      hoverMode,\n      starEmptyColor,\n      starRatedColor,\n      starHoverColor,\n      gradientPathName,\n      fillId,\n      ignoreInlineStyles\n    } = this.props;\n    let fill;\n\n    if (hoverMode) {\n      if (isHovered) fill = starHoverColor;else fill = starEmptyColor;\n    } else {\n      if (isPartiallyFullStar) fill = `url('${gradientPathName}#${fillId}')`;else if (isStarred) fill = starRatedColor;else fill = starEmptyColor;\n    }\n\n    const pathStyle = {\n      fill: fill,\n      transition: 'fill .2s ease-in-out'\n    };\n    return ignoreInlineStyles ? {} : pathStyle;\n  }\n\n  get starClasses() {\n    const {\n      isSelected,\n      isPartiallyFullStar,\n      isHovered,\n      isCurrentHoveredStar,\n      ignoreInlineStyles\n    } = this.props;\n    const starClasses = classNames({\n      'widget-svg': true,\n      'widget-selected': isSelected,\n      'multi-widget-selected': isPartiallyFullStar,\n      'hovered': isHovered,\n      'current-hovered': isCurrentHoveredStar\n    });\n    return ignoreInlineStyles ? {} : starClasses;\n  }\n\n  render() {\n    const {\n      changeRating,\n      hoverOverStar,\n      unHoverOverStar,\n      svgIconViewBox,\n      svgIconPath\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"star-container\",\n      style: this.starContainerStyle,\n      onMouseEnter: hoverOverStar,\n      onMouseLeave: unHoverOverStar,\n      onClick: changeRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: svgIconViewBox,\n      className: this.starClasses,\n      style: this.starSvgStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      className: \"star\",\n      style: this.pathStyle,\n      d: svgIconPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nStar.propTypes = {\n  fillId: PropTypes.string.isRequired,\n  changeRating: PropTypes.func,\n  hoverOverStar: PropTypes.func,\n  unHoverOverStar: PropTypes.func,\n  isStarred: PropTypes.bool.isRequired,\n  isPartiallyFullStar: PropTypes.bool.isRequired,\n  isHovered: PropTypes.bool.isRequired,\n  hoverMode: PropTypes.bool.isRequired,\n  isCurrentHoveredStar: PropTypes.bool.isRequired,\n  isFirstStar: PropTypes.bool.isRequired,\n  isLastStar: PropTypes.bool.isRequired,\n  starDimension: PropTypes.string.isRequired,\n  starSpacing: PropTypes.string.isRequired,\n  starHoverColor: PropTypes.string.isRequired,\n  starRatedColor: PropTypes.string.isRequired,\n  starEmptyColor: PropTypes.string.isRequired,\n  gradientPathName: PropTypes.string.isRequired,\n  ignoreInlineStyles: PropTypes.bool.isRequired,\n  svgIconPath: PropTypes.string.isRequired,\n  svgIconViewBox: PropTypes.string.isRequired\n};\nexport default Star;","map":{"version":3,"sources":["C:/Users/KimHeejin/WebstormProjects/frontend-pri-b/src/pages/star.js"],"names":["React","classNames","PropTypes","Star","Component","starContainerStyle","changeRating","starSpacing","isFirstStar","isLastStar","ignoreInlineStyles","props","position","display","verticalAlign","paddingLeft","undefined","paddingRight","cursor","starSvgStyle","isCurrentHoveredStar","starDimension","width","height","transition","transform","pathStyle","isStarred","isPartiallyFullStar","isHovered","hoverMode","starEmptyColor","starRatedColor","starHoverColor","gradientPathName","fillId","fill","starClasses","isSelected","render","hoverOverStar","unHoverOverStar","svgIconViewBox","svgIconPath","propTypes","string","isRequired","func","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport '../css/components/'\r\nclass Star extends React.Component {\r\n\r\n    get starContainerStyle() {\r\n        const {\r\n            changeRating,\r\n            starSpacing,\r\n            isFirstStar,\r\n            isLastStar,\r\n            ignoreInlineStyles\r\n        } = this.props;\r\n\r\n        const starContainerStyle = {\r\n            position: 'relative',\r\n            display: 'inline-block',\r\n            verticalAlign: 'middle',\r\n            paddingLeft: isFirstStar ? undefined : starSpacing,\r\n            paddingRight: isLastStar ? undefined : starSpacing,\r\n            cursor: changeRating ? 'pointer' : undefined\r\n        };\r\n        return ignoreInlineStyles ? {} : starContainerStyle\r\n    }\r\n\r\n    get starSvgStyle() {\r\n        const {\r\n            ignoreInlineStyles,\r\n            isCurrentHoveredStar,\r\n            starDimension\r\n        } = this.props;\r\n        const starSvgStyle = {\r\n            width: starDimension,\r\n            height: starDimension,\r\n            transition: 'transform .2s ease-in-out',\r\n            transform: isCurrentHoveredStar ? 'scale(1.1)' : undefined\r\n        };\r\n\r\n        return ignoreInlineStyles ? {} : starSvgStyle;\r\n    }\r\n\r\n    get pathStyle() {\r\n        const {\r\n            isStarred,\r\n            isPartiallyFullStar,\r\n            isHovered,\r\n            hoverMode,\r\n            starEmptyColor,\r\n            starRatedColor,\r\n            starHoverColor,\r\n            gradientPathName,\r\n            fillId,\r\n            ignoreInlineStyles\r\n        } = this.props;\r\n\r\n        let fill;\r\n        if (hoverMode) {\r\n            if (isHovered) fill = starHoverColor;\r\n            else fill = starEmptyColor;\r\n        } else {\r\n            if (isPartiallyFullStar) fill = `url('${gradientPathName}#${fillId}')`;\r\n            else if (isStarred) fill = starRatedColor;\r\n            else fill = starEmptyColor;\r\n        }\r\n\r\n        const pathStyle = {\r\n            fill: fill,\r\n            transition: 'fill .2s ease-in-out',\r\n        };\r\n\r\n        return ignoreInlineStyles ? {} : pathStyle;\r\n    }\r\n\r\n    get starClasses() {\r\n        const {\r\n            isSelected,\r\n            isPartiallyFullStar,\r\n            isHovered,\r\n            isCurrentHoveredStar,\r\n            ignoreInlineStyles\r\n        } = this.props;\r\n\r\n        const starClasses = classNames({\r\n            'widget-svg': true,\r\n            'widget-selected': isSelected,\r\n            'multi-widget-selected': isPartiallyFullStar,\r\n            'hovered': isHovered,\r\n            'current-hovered': isCurrentHoveredStar\r\n        })\r\n\r\n        return ignoreInlineStyles ? {} : starClasses\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            changeRating,\r\n            hoverOverStar,\r\n            unHoverOverStar,\r\n            svgIconViewBox,\r\n            svgIconPath\r\n        } = this.props;\r\n        return (\r\n            <div\r\n                className=\"star-container\"\r\n                style={this.starContainerStyle}\r\n                onMouseEnter={hoverOverStar}\r\n                onMouseLeave={unHoverOverStar}\r\n                onClick={changeRating}\r\n            >\r\n                <svg\r\n                    viewBox={svgIconViewBox}\r\n                    className={this.starClasses}\r\n                    style={this.starSvgStyle}\r\n                >\r\n                    <path\r\n                        className=\"star\"\r\n                        style={this.pathStyle}\r\n                        d={svgIconPath}\r\n                    />\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStar.propTypes = {\r\n    fillId: PropTypes.string.isRequired,\r\n    changeRating: PropTypes.func,\r\n    hoverOverStar: PropTypes.func,\r\n    unHoverOverStar: PropTypes.func,\r\n    isStarred: PropTypes.bool.isRequired,\r\n    isPartiallyFullStar: PropTypes.bool.isRequired,\r\n    isHovered: PropTypes.bool.isRequired,\r\n    hoverMode: PropTypes.bool.isRequired,\r\n    isCurrentHoveredStar: PropTypes.bool.isRequired,\r\n    isFirstStar: PropTypes.bool.isRequired,\r\n    isLastStar: PropTypes.bool.isRequired,\r\n    starDimension: PropTypes.string.isRequired,\r\n    starSpacing: PropTypes.string.isRequired,\r\n    starHoverColor: PropTypes.string.isRequired,\r\n    starRatedColor: PropTypes.string.isRequired,\r\n    starEmptyColor: PropTypes.string.isRequired,\r\n    gradientPathName: PropTypes.string.isRequired,\r\n    ignoreInlineStyles: PropTypes.bool.isRequired,\r\n    svgIconPath: PropTypes.string.isRequired,\r\n    svgIconViewBox: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Star;"]},"metadata":{},"sourceType":"module"}