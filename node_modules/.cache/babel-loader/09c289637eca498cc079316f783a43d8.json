{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport Popper from 'popper.js';\nexport const Dropdown1 = ({\n  placement = 'bottom-end'\n}) => {\n  const [hidden, setHidden] = useState(true);\n\n  const openDropdown = () => {\n    new Popper(buttonRef.current, dropdownRef.current, {\n      placement: placement\n    });\n    setHidden(false);\n  };\n\n  const closeDropdown = () => {\n    setHidden(true);\n  };\n\n  const buttonRef = React.createRef();\n  const dropdownRef = React.createRef();\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (hidden || buttonRef.current.contains(event.target) || dropdownRef.current.contains(event.target)) {\n        return false;\n      }\n\n      setHidden(!hidden);\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [hidden, dropdownRef, buttonRef]);\n};","map":{"version":3,"sources":["C:/Users/KimHeejin/WebstormProjects/frontend-pri-b/src/component/dropdown.js"],"names":["React","useState","useEffect","Popper","Dropdown1","placement","hidden","setHidden","openDropdown","buttonRef","current","dropdownRef","closeDropdown","createRef","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAS,GAAG;AAAb,CAAD,KAAgC;AACrD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;;AACA,QAAMO,YAAY,GAAG,MAAM;AACvB,QAAIL,MAAJ,CAAWM,SAAS,CAACC,OAArB,EAA8BC,WAAW,CAACD,OAA1C,EAAmD;AAC/CL,MAAAA,SAAS,EAAEA;AADoC,KAAnD;AAGAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GALD;;AAMA,QAAMK,aAAa,GAAG,MAAM;AACxBL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,QAAME,SAAS,GAAGT,KAAK,CAACa,SAAN,EAAlB;AACA,QAAMF,WAAW,GAAGX,KAAK,CAACa,SAAN,EAApB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,kBAAkB,GAAGC,KAAK,IAAI;AAChC,UACIT,MAAM,IACNG,SAAS,CAACC,OAAV,CAAkBM,QAAlB,CAA2BD,KAAK,CAACE,MAAjC,CADA,IAEAN,WAAW,CAACD,OAAZ,CAAoBM,QAApB,CAA6BD,KAAK,CAACE,MAAnC,CAHJ,EAIE;AACE,eAAO,KAAP;AACH;;AACDV,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,KATD;;AAUAY,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCL,kBAAvC;AACA,WAAO,MAAM;AACTI,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CN,kBAA1C;AACH,KAFD;AAGH,GAfQ,EAeN,CAACR,MAAD,EAASK,WAAT,EAAsBF,SAAtB,CAfM,CAAT;AAgBH,CA9BM","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Popper from 'popper.js'\r\n\r\nexport const Dropdown1 = ({placement = 'bottom-end'}) => {\r\n    const [hidden, setHidden] = useState(true)\r\n    const openDropdown = () => {\r\n        new Popper(buttonRef.current, dropdownRef.current, {\r\n            placement: placement\r\n        })\r\n        setHidden(false)\r\n    }\r\n    const closeDropdown = () => {\r\n        setHidden(true)\r\n    }\r\n\r\n    const buttonRef = React.createRef()\r\n    const dropdownRef = React.createRef()\r\n    useEffect(() => {\r\n        const handleClickOutside = event => {\r\n            if (\r\n                hidden ||\r\n                buttonRef.current.contains(event.target) ||\r\n                dropdownRef.current.contains(event.target)\r\n            ) {\r\n                return false\r\n            }\r\n            setHidden(!hidden)\r\n        }\r\n        document.addEventListener('mousedown', handleClickOutside)\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside)\r\n        }\r\n    }, [hidden, dropdownRef, buttonRef])\r\n}"]},"metadata":{},"sourceType":"module"}